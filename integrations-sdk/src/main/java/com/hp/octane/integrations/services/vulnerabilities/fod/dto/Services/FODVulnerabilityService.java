package com.hp.octane.integrations.services.vulnerabilities.fod.dto.Services;


import com.hp.octane.integrations.services.vulnerabilities.fod.dto.FodConnectionFactory;
import com.hp.octane.integrations.services.vulnerabilities.fod.dto.POJOs.Vulnerability;
import com.hp.octane.integrations.services.vulnerabilities.fod.dto.POJOs.VulnerabilityAllData;
import com.hp.octane.integrations.utils.CIPluginSDKUtils;

import java.util.List;

/**
 * Created by hijaziy on 8/3/2017.
 */
public class FODVulnerabilityService {
    ///api/v3/releases/{releaseId}/vulnerabilities

    static final String urlSingleVulnAllData = "%s/releases/%d/vulnerabilities/%s/all-data";


    public static List<Vulnerability> getAllVulnerabilities(Long releaseId){
        final String urlVulnsFormat = "%s/releases/%d/vulnerabilities";


        String url = String.format(urlVulnsFormat, FodConnectionFactory.instance().getEntitiesURL(), releaseId);

        url +=  "?filters=" + CIPluginSDKUtils.urlEncodeQueryParam("status:Existing|New");

//        if(scanId != null){
//            url = url + "?filters=scanId%3A" + scanId;
//        }

        Vulnerability.Vulnerabilities allFODEntities =
                FodConnectionFactory.instance().getAllFODEntities(url, Vulnerability.Vulnerabilities.class, null );


        return allFODEntities.items;

    }

    public static VulnerabilityAllData getSingleVulnAlldata(Long releaseId, String vulnId){

        String url = String.format(urlSingleVulnAllData,
                FodConnectionFactory.instance().getEntitiesURL(), releaseId, vulnId);

        VulnerabilityAllData vulnerabilityAllData =
                FodConnectionFactory.instance().getSpeceficFODEntity(url, VulnerabilityAllData.class);

        return vulnerabilityAllData;
    }

}
